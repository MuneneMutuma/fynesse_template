[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fynesse"
version = "0.1.0"
description = "Template files for performing fynesse pipeline data analysis with python."
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Neil D. Lawrence", email = "emal@domain.here"}
]
maintainers = [
    {name = "Neil D. Lawrence", email = "emal@domain.here"}
]
keywords = ["data-science", "analysis", "framework", "access", "assess", "address"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "jupyter>=1.0.0",
    "matplotlib>=3.7.0",
    "PyYAML>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
interactive = [
    "bokeh>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/lawrennd/fynesse_template"
Repository = "https://github.com/lawrennd/fynesse_template"
Documentation = "https://github.com/lawrennd/fynesse_template#readme"
Issues = "https://github.com/lawrennd/fynesse_template/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["fynesse*"]
exclude = ["tests*", "*.tests*"]

[tool.setuptools.package-data]
fynesse = ["defaults.yml"]

[tool.pytest.ini_options]
testpaths = ["fynesse/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=fynesse",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["fynesse"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "matplotlib.*",
    "jupyter.*",
    "bokeh.*",
]
ignore_missing_imports = true
